syntax = "proto3";

package liquidity.liquidity;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "liquidity/liquidity/params.proto";

option go_package = "github.com/Srikarrao1/liquidity/x/liquidity/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams (MsgUpdateParams) returns (MsgUpdateParamsResponse);
  // CreatePool defines a governance operation for creating the pool 
  //and returning the create pool response
  rpc CreatePool   (MsgCreatePool  ) returns (MsgCreatePoolResponse  );
   // AddLiquidity defines a governance operation for Adding the liquidity 
  //and returning the Liquidity response
  rpc AddLiquidity (MsgAddLiquidity) returns (MsgAddLiquidityResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                     "authority";
  option           (amino.name) = "liquid/x/liqu/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

//Define the Pool message
message Pool {
  uint64 id = 1;
  string creator = 2;
  string builder = 3;
  string assetA = 4;
  string assetB = 5;
  int32 reserveA = 6;
  int32 reserveB = 7;
  uint64 totalLiquidity = 8;
}

//Define the message for create pool
message MsgCreatePool {
  option (cosmos.msg.v1.signer) = "creator";
  string creator        = 1;
  string builder        = 2;
  string assetA         = 3;
  string assetB         = 4;
  int32  initialAmountA = 5;
  int32  initialAmountB = 6;

}

//Defines a message create pool response
message MsgCreatePoolResponse {
  uint64 pool_id = 1;
}

//Define the Add Liquidity message
message MsgAddLiquidity {
  option (cosmos.msg.v1.signer) = "creator";
  string creator   = 1;
  string initiator = 2;
  uint64 poolId    = 3;
  int32  amountA   = 4;
  int32  amountB   = 5;
  string  tokenA    = 6;
  string  tokenB    = 7;
}

//Associated add liquidity response
message MsgAddLiquidityResponse {
  
}